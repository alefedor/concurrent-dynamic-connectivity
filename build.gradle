buildscript {
    dependencies {
        classpath "org.jetbrains.kotlinx:atomicfu-gradle-plugin:0.14.3"
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.4.21'
    id "me.champeau.gradle.jmh" version "0.4.8"
}

apply plugin: 'idea'
apply plugin: 'kotlinx-atomicfu'

atomicfu {
    variant = "VH"
    transformJvm = true
}

group 'hse'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.9
targetCompatibility = 1.9

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://kotlin.bintray.com/kotlinx' }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.21"
    compile 'org.jetbrains.kotlinx:lincheck:2.11'
    compile group: 'org.jctools', name: 'jctools-core', version: '3.2.0'
    compile group: 'it.unimi.dsi', name: 'fastutil', version: '8.5.1'
    compile group: 'com.google.guava', name: 'guava', version: '30.1-jre'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileJmhKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

sourceSets {
    jmh {
        java.srcDirs = ['src/jmh/java']
        kotlin.srcDirs = ['src/jmh/kotlin']
        compileClasspath += sourceSets.main.runtimeClasspath
    }
}

task benchmarkJar(type: Jar, dependsOn: jmhJar) {
    manifest {
        attributes 'Main-Class': 'benchmarks.BenchmarkRunnerKt'
    }
    classifier = 'benchmark'
    from {
        (jmhJar.outputs.files + configurations.jmh + configurations.jmhRuntime)
                .collect { it.isDirectory() ? it : zipTree(it) }
    }
}

test {
    jvmArgs("--add-opens", "java.base/jdk.internal.misc=ALL-UNNAMED",
            "--add-exports", "java.base/jdk.internal.util=ALL-UNNAMED")
    maxHeapSize = "4g"
}